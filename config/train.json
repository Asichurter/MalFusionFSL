{
    "task": {
        "dataset": "virushare-20",
        "k": 5,
        "n": 5,
        "qk": 5,
        "version": 111,
        "device_id": 0,
        "preload_state_dict_versions": []
    },
    "training": {
        "epoch": 20000,
        "data_source": [
            "sequence",
            "image"
        ],
        "split_version": 1,
        "verbose": true,
        "clip_grad_norm": null
    },
    "description": [
        "序列长度为300",
        "使用sgd优化",
        "使用1层BiLSTM编码,使用1dCNN解码",
        "使用经过了stride的conv-n，使用global_pooling",
        "使用image和sequence的cat",
        "初始学习率为1e-3"
    ],
    "model": {
        "model_name": "MLossSIMPLE",
        "reproject": {
            "enabled": false,
            "params": {
                "out_dim": 64,
                "non_linear": null
            }
        },
        "fusion": {
            "type": "cat",
            "params": {
                "bili_norm_type": "bn",
                "bili_affine": true,
                "bili_non_linear": "tanh",
                "bili_dropout": 0.2,
                "att_dropout": 0.2,
                "att_scale_factor": 1,
                "hidden_dim": 64,
                "output_dim": 64,
                "dnn_hidden_dims": [
                    512,
                    512,
                    128
                ],
                "dnn_activations": [
                    "relu",
                    "relu",
                    "none"
                ],
                "dnn_dropouts": [
                    0.3,
                    0.3,
                    0.3
                ]
            }
        },
        "embedding": {
            "use_pretrained": true,
            "embed_size": 300,
            "word_count": null
        },
        "conv_backbone": {
            "type": "conv-4",
            "params": {
                "conv-n": {
                    "global_pooling": true,
                    "global_pooling_type": "max",
                    "input_size": 224,
                    "out_type": "patch",
                    "channels": [
                        1,
                        32,
                        64,
                        128,
                        256
                    ],
                    "kernel_sizes": [
                        3,
                        3,
                        3,
                        3
                    ],
                    "padding_sizes": [
                        1,
                        1,
                        1,
                        1
                    ],
                    "strides": [
                        2,
                        1,
                        1,
                        1
                    ],
                    "nonlinears": [
                        true,
                        true,
                        true,
                        false
                    ]
                }
            }
        },
        "sequence_backbone": {
            "seq_type": "LSTM",
            "max_seq_len": 300,
            "LSTM": {
                "bidirectional": true,
                "hidden_size": 128,
                "layer_num": 1,
                "dropout": 0.5,
                "modules": {
                    "self_attention": {
                        "enabled": false,
                        "type": "custom",
                        "params": {
                            "self_att_dim": null,
                            "multi_head_att_head_num": 4
                        }
                    },
                    "temporal_conv": {
                        "enabled": true,
                        "params": {
                            "kernel_sizes": [
                                3
                            ],
                            "paddings": [
                                1
                            ],
                            "relus": [
                                true
                            ],
                            "pools": [
                                "ada"
                            ],
                            "bn": [
                                true
                            ]
                        }
                    }
                }
            }
        },
        "regularization": {
            "dropout": 0.2
        },
        "more": {
            "temperature": 1,
            "distance_type": "euc",
            "aux_loss_factor": 0.2
        },
        "cluster": {
            "cluster_num_step": 1,
            "SIMPLE_init_sigma": 1
        },
        "model_feature": {
            "feat": {
                "set_to_set_func": "transformer",
                "contrastive_factor": 0.1,
                "avg": "post",
                "deepset_hidden_dim": 128,
                "trans_dropout": 0.5,
                "trans_head_nums": 1
            }
        },
        "data_parallel": {
            "data_parallel": false,
            "data_parallel_devices": null
        }
    },
    "validate": {
        "val_cycle": 100,
        "val_episode": 50,
        "metrics": [
            "acc"
        ],
        "early_stop": {
            "criteria": "loss",
            "save_latest": true
        }
    },
    "optimize": {
        "loss_function": "nll",
        "optimizer": "sgd",
        "momentum": 0.9,
        "default_lr": 0.001,
        "custom_lrs": {},
        "weight_decay": 0.0005,
        "task_batch": 1,
        "scheduler": {
            "type": "step",
            "lr_decay_iters": 15000,
            "lr_decay_gamma": 0.1
        }
    },
    "visualization": {
        "enabled": false,
        "type": "visdom",
        "record_gradient": false,
        "gradient_update_cycle": 1000,
        "plot": {
            "types": [
                "line",
                "line"
            ],
            "titles": [
                "acc",
                "loss"
            ],
            "xlabels": [
                "iterations",
                "iterations"
            ],
            "ylabels": [
                "accuracy",
                "loss"
            ],
            "legends": [
                [
                    "train acc",
                    "val acc"
                ],
                [
                    "train loss",
                    "val loss"
                ]
            ]
        }
    }
}